import cloneDeep from "clone-deep";
import flat from "array.prototype.flat";
import merge from "merge";
export declare function isArray(value: any): boolean;
export declare function isObject(value: any): boolean;
export declare function isNumber(value: any): boolean;
export declare function isFunction(value: any): boolean;
export declare function isString(value: any): boolean;
export declare function isNull(value: any): boolean;
export declare function isBoolean(value: any): boolean;
export declare function isEmpty(value: any): boolean;
export declare function clone(obj: any): any;
export declare function dataset(obj: any, key: string, value: any): any;
export declare function contains(parent: any, node: any): any;
export declare function deepMerge(a: any, b: any): any;
export declare function mergeConfig(a: any, b?: any): any;
export declare function debounce(fn: (...args: any[]) => any, delay: number, immediate?: boolean): (this: any, ...args: any[]) => any;
export declare function addClass(el: Element, name: string): void;
export declare function removeClass(el: Element, name: string): void;
export { cloneDeep, flat, merge };
